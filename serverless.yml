service: anar-server

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  stage: ${opt:stage, 'local'}

  environment:
    DATABASE_URL: ${self:custom.env.${self:provider.stage}.DATABASE_URL, ''}
    SERVICES_URL: ${self:custom.env.${self:provider.stage}.SERVICES_URL, ''}

  logs:
    restApi: true
  apiGateway:
    # Removed cloudWatchRole since it's causing issues
    # and not related to API key settings

plugins:
  - serverless-localstack

custom:
  localstack:
    debug: true
    autostart: true
    host: http://localhost
    edgePort: 4566
    region: us-west-2
    stages:
      - local

  env:
    local:
      DATABASE_URL: postgresql://postgres:postgres@host.docker.internal:54322/postgres
      SERVICES_URL: http://host.docker.internal:4566/_aws/execute-api/sgfesj94xl/local

    dev:
      DATABASE_URL: https://etxyzjizvpnycobqjqgk.supabase.co
      SERVICES_URL: https://api.anarimarketplace.com

    production:
      DATABASE_URL: postgres://aws-user:aws-pass@your-prod-rds.amazonaws.com:5432/proddb
      SERVICES_URL: https://api.anarimarketplace.com

functions:
  listingService:
    handler: lambdas/listing-service/app.lambdaHandler
    events:
      - http:
          path: listings
          method: post
          private: false
      - http:
          path: listings
          method: get
          private: false
      - http:
          path: listings/{id}
          method: get
          private: false
      - sqs:
          arn:
            Fn::GetAtt:
              - ListingServiceQueue
              - Arn

  paymentService:
    handler: lambdas/payment-service/app.lambdaHandler
    events:
      - http:
          path: start-payment-intent
          method: post
          private: false
      - http:
          path: payment-service/webhook
          method: post
          private: false
      - sqs:
          arn:
            Fn::GetAtt:
              - PaymentServiceQueue
              - Arn

  deliveryService:
    handler: lambdas/delivery-service/app.lambdaHandler
    events:
      - http:
          path: pricing-requests
          method: post
          private: false
      - sqs:
          arn:
            Fn::GetAtt:
              - DeliveryServiceQueue
              - Arn

  orderService:
    handler: lambdas/order-service/app.lambdaHandler
    events:
      - http:
          path: checkout
          method: post
          private: false
      - sqs:
          arn:
            Fn::GetAtt:
              - OrderServiceQueue
              - Arn

  notificationService:
    handler: lambdas/notification-service/app.lambdaHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - NotificationServiceQueue
              - Arn
  userService:
    handler: lambdas/user-service/app.lambdaHandler
    events:
      - http:
          path: drivers/realtime-metadata
          method: patch
          private: false
resources:
  Resources:
    FanoutTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: FanoutTopic

    ListingServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ListingServiceQueue

    PaymentServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: PaymentServiceQueue

    DeliveryServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: DeliveryServiceQueue

    OrderServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: OrderServiceQueue

    NotificationServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: NotificationServiceQueue

    ListingServiceQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: ListingServiceQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSMessages
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource: !GetAtt ListingServiceQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref FanoutTopic

    PaymentServiceQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: PaymentServiceQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSMessages
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource: !GetAtt PaymentServiceQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref FanoutTopic

    DeliveryServiceQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: DeliveryServiceQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSMessages
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource: !GetAtt DeliveryServiceQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref FanoutTopic

    OrderServiceQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: OrderServiceQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSMessages
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource: !GetAtt OrderServiceQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref FanoutTopic

    NotificationServiceQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: NotificationServiceQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSNSMessages
              Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource: !GetAtt NotificationServiceQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref FanoutTopic

    ListingServiceSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: !GetAtt ListingServiceQueue.Arn
        Protocol: sqs
        TopicArn: !Ref FanoutTopic

    PaymentServiceSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: !GetAtt PaymentServiceQueue.Arn
        Protocol: sqs
        TopicArn: !Ref FanoutTopic

    DeliveryServiceSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: !GetAtt DeliveryServiceQueue.Arn
        Protocol: sqs
        TopicArn: !Ref FanoutTopic

    OrderServiceSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: !GetAtt OrderServiceQueue.Arn
        Protocol: sqs
        TopicArn: !Ref FanoutTopic

    NotificationServiceSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: !GetAtt NotificationServiceQueue.Arn
        Protocol: sqs
        TopicArn: !Ref FanoutTopic

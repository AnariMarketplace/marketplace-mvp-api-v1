openapi: 3.0.3
info:
  title: Order Service API
  version: "1.0.0"
  description: A RESTful API for managing checkouts and orders in the order service.
servers:
  - url: http://order.example.com/v1
tags:
  - name: Checkouts
  - name: Orders

paths:
  /checkouts:
    get:
      tags:
        - Checkouts
      summary: Retrieve all checkouts
      responses:
        "200":
          description: A list of checkout records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Checkout"
    post:
      tags:
        - Checkouts
      summary: Create a new checkout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutInput"
      responses:
        "201":
          description: Checkout created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"

  /checkouts/{checkoutId}:
    get:
      tags:
        - Checkouts
      summary: Retrieve a specific checkout
      parameters:
        - in: path
          name: checkoutId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Checkout found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
        "404":
          description: Checkout not found
    put:
      tags:
        - Checkouts
      summary: Update an existing checkout
      parameters:
        - in: path
          name: checkoutId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutInput"
      responses:
        "200":
          description: Checkout updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
        "404":
          description: Checkout not found
    delete:
      tags:
        - Checkouts
      summary: Delete a checkout
      parameters:
        - in: path
          name: checkoutId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Checkout deleted successfully
        "404":
          description: Checkout not found

  /orders:
    get:
      tags:
        - Orders
      summary: Retrieve all orders
      responses:
        "200":
          description: A list of order records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderInput"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Retrieve a specific order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Order found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
    put:
      tags:
        - Orders
      summary: Update an existing order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderInput"
      responses:
        "200":
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
    delete:
      tags:
        - Orders
      summary: Delete an order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Order deleted successfully
        "404":
          description: Order not found

components:
  schemas:
    Checkout:
      type: object
      properties:
        id:
          type: string
          format: uuid
        listingIds:
          type: array
          items:
            type: string
            format: uuid
        customerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [PENDING, COMPLETED]
        orderNotes:
          type: string
        deliveryAddress:
          type: string
        deliveryPricingRequestId:
          type: string
          format: uuid
        subtotal:
          type: number
          format: float
      required:
        - id
        - listingIds
        - status
        - createdAt
        - updatedAt

    CheckoutInput:
      type: object
      properties:
        listingIds:
          type: array
          items:
            type: string
            format: uuid
        customerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
        status:
          type: string
          enum: [PENDING, COMPLETED]
        orderNotes:
          type: string
        deliveryAddress:
          type: string
        deliveryPricingRequestId:
          type: string
          format: uuid
        subtotal:
          type: number
          format: float
      required:
        - listingIds
        - status

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        listingIds:
          type: array
          items:
            type: string
            format: uuid
        customerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [PENDING, COMPLETED]
        orderNotes:
          type: string
        deliveryAddress:
          type: string
        deliveryPricingRequestId:
          type: string
          format: uuid
      required:
        - id
        - listingIds
        - status
        - createdAt
        - updatedAt

    OrderInput:
      type: object
      properties:
        listingIds:
          type: array
          items:
            type: string
            format: uuid
        customerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
        status:
          type: string
          enum: [PENDING, COMPLETED]
        orderNotes:
          type: string
        deliveryAddress:
          type: string
        deliveryPricingRequestId:
          type: string
          format: uuid
      required:
        - listingIds
        - status
